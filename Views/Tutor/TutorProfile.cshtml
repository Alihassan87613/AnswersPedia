@section Head
{
    @model StudentHelpp.Models.ViewModelTutorProfile
    @using StudentHelpp.Models; 
}

@{
    ViewBag.Title="Profile";
    Layout = "~/Views/Shared/_AcountLayout.cshtml";
}
@section Notification
{
     <div class="colm">
       <label  class="headd">
          Inbox
       </label>
       <br>
       <label class="list-group-item">
           <span class="badge">@Convert.ToInt32(ViewData["AnswerCnt"])</span>
           Answer
       </label>
       <br>
       <label  class="list-group-item">
           <span class="badge">@Convert.ToInt32(ViewData["TotalPoints"])</span>
           Points
       </label>
    </div>  
}
@section btn
{
    <li><a href="@Url.Action("LogOut", "STLogin")">Log Out</a></li>
}
@section quest
{
    <li><a href="@Url.Action("BrowseQuest", "Tutor")">New Questions</a></li>
}
@section AnswerQuest
{
    <li><a href="@Url.Action("AllQuestionsShownToTutorAnswerPostedByTutor","Tutor")">Questions</a></li>
}
@section leftSide
{
     <div class="top">
        <ul>
            <li class="margin"><a href="#Over">OverView</a></li>
            <li class="margin"><a href="#Sub">Subject</a></li>
            <li class="margin"><a href="#Edu">Education</a></li>
            <li class="margin"><a href="@Url.Action("TutorPublicProfile", "Tutor",new { user = (string)@ViewData["UserName"] ,Cur_User= @Model.tutor_Answer.T_Email })">Public View</a></li>
        </ul>
    </div>
}
@section UserName
{
        @ViewData["UserName"]    
}
@section Profile
{
    <li><a href="@Url.Action("TutorProfile", "Tutor")">Profile</a></li>    
}

@section Home{
    <li><a href="@Url.Action("TutorAcount", "Tutor")">Home</a></li>    
    }
@section Prfile
{
    <li><a href="@Url.Action("TutorProfile", "Tutor")">Profile</a></li>    
}
@section acunt
{
    <li><a href="@Url.Action("EarningAcount", "Earning")">Acount</a></li>    
}
@section Acount
{
    <li><a href="@Url.Action("EarningAcount","Earning")">Acount</a></li>    
}

@section Details{






    <script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/adapters/jquery.js"></script>
 @* //****************************************************************@
    @* //***************************TUTOR INFO***************************@
    @* //****************************************************************@
  @{   
      int h1 = 0, h2 = 0, h = 0, s = 0, i111 = 0;
    <div class="col-md-12">
        <div class="jumbotron">
            <div class="pan" id="#Over">
                <label>OverView</label>
                <button type="button" class="bttnn primary" onclick="AddOverView()">Edit</button> 
                <div class="col-md-12">
                @{
                    if (Model.tutor_info.type != "E")
                    {
                        if ((Int32)ViewData["Countabc"] == 0)
                        { }
                        else
                        {
                            for (s = 0; s < (Int32)ViewData["countO"]; s++)
                            {
                                     @Html.Raw(HttpUtility.HtmlDecode(Model.objStu[s].tutor_info.Overview))
                            }
                        }
                    }
                    else if (Model.tutor_info.type == "E")
                    {
                        <script type="text/javascript">
                            document.onload = $(document).ready(function () {
                                $('#OverView').modal({
                                    show: true,
                                    backdrop: 'static',
                                    keyboard: false
                                })
                            });
                        </script>
                    }
                     
                 }
                </div>
            </div>
            <div class="pan" id="Sub">
                <label>Subject</label>
                <button type="button" class="bttnn primary" onclick="AddSubject()">Edit</button> 
                <div class="col-md-12">

                    @{
                        if (Model.tutor_info.type != "S")
                        {
                            if ((Int32)ViewData["countSub"] >= 1)
                            {
                                for (i111 = 0; i111 < 6; i111++)
                                {
                                    if (Model.objStu[0].tutor_subject[i111].Checked == true)
                                    {
                                            <label>
                                                @Model.objStu[0].tutor_subject[i111].Subject_Name
                                            </label>
                                    }
                                }
                            }

                        }
                        else if (Model.tutor_info.type == "S")
                        {
                        
                            <script type="text/javascript">
                                document.onload = $(document).ready(function () {
                                    $('#Subject').modal({
                                        show: true,
                                        backdrop: 'static',
                                        keyboard: false
                                    })
                                });
                            </script>
                    
                        }
                    }
                </div>
            </div>
            <div class="pan" id="Edu">
                <label>Education</label>
                 <div class="aa">
                    <div class="uni">
                        <label>Univeristy</label>

                         <div class="clg">
                         <a   data-toggle="modal" data-target="#AddUni"   >Add a University</a>
                         
                         </div>
                         <div class="sub">
                         @{
                             if (Model.tutor_info.type != "U" && Model.tutor_info.type != "UU")
                             {
                                 if (Model.tutor_info.UniId == Guid.Empty)
                                 {
                                     if ((Int32)ViewData["Countabc"] == 0)
                                     { }
                                     else
                                     {
                                         for (h = 0; h < (Int32)ViewData["countU"]; h++)
                                         {
                                            <p>Degree : @Model.objStu[h].tutor_info.Degree</p>
                                            <a href="@Url.Action("HelloU", "Tutor", new { abc = Model.objStu[h2].tutor_info.Uni_Id })">                                     
                                                <button type="submit" class="bttnn primary">Edit</button>
                                            </a>
                                            <label> @Model.objStu[h].tutor_info.Uni                (@Model.objStu[h].tutor_info.UniStartDay/@Model.objStu[h].tutor_info.UniStartMonth/@Model.objStu[h].tutor_info.UniStartYear) to (@Model.objStu[h].tutor_info.UniEndDay/@Model.objStu[h].tutor_info.UniEndMonth/@Model.objStu[h].tutor_info.UniEndYear)  </label>
                                
                                         }
                                     }
                                 }
                                 else
                                 {
                                <script type="text/javascript">
                                    document.onload = $(document).ready(function () {
                                        $('#Uni').modal({
                                            show: true,
                                            backdrop: 'static',
                                            keyboard: false
                                        })
                                    });
                                     </script>
                                 }

                             }
                             else if (Model.tutor_info.type == "U" || Model.tutor_info.type == "UU" || Model.tutor_info.type == "UD")
                             {
                                <script type="text/javascript">
                                    document.onload = $(document).ready(function () {
                                        $('#AddUni').modal({
                                            show: true,
                                            backdrop: 'static',
                                            keyboard: false
                                        })
                                    });
                                     </script>
                             }
                             
                          }
                         
                        </div>
                    </div>
                    <div class="uni" >
                        <label>College</label>
                        <div class="clg">
                        <a href=""  data-toggle="modal" data-target="#AddCollege">Add a College</a>
                           

                        </div>
                        <div class="sub1">
                        @{
                            if (Model.tutor_info.type != "C" && Model.tutor_info.type != "CC")
                            {
                                if (Model.tutor_info.ClgId == Guid.Empty)
                                {
                                    if ((Int32)ViewData["Countabc"] == 0)
                                    { }
                                    else
                                    {
                                        for (h1 = 0; h1 < (Int32)ViewData["countC"]; h1++)
                                        {
                                            <a href="@Url.Action("HelloC", "Tutor", new { abc = Model.objStu[h1].tutor_info.Clg_Id })">                                     
                                              <button type="submit" class="bttnn primary">Edit</button>
                                            </a>
                                    <label> @Model.objStu[h1].tutor_info.College               (@Model.objStu[h1].tutor_info.CollegeStartDay/@Model.objStu[h1].tutor_info.CollegeStartMonth/@Model.objStu[h1].tutor_info.CollegeStartYear) to (@Model.objStu[h1].tutor_info.CollegeEndDay/@Model.objStu[h1].tutor_info.CollegeEndMonth/@Model.objStu[h1].tutor_info.CollegeEndYear)  </label>
                                
                                        }
                                    }
                                }
                                else
                                {
                                <script type="text/javascript">
                                    document.onload = $(document).ready(function () {
                                        $('#College').modal({
                                            show: true,
                                            backdrop: 'static',
                                            keyboard: false
                                        })
                                    });
                                     </script>
                                }
                            }
                            else if (Model.tutor_info.type == "C" || Model.tutor_info.type == "CC")
                            {
                                <script type="text/javascript">
                                    document.onload = $(document).ready(function () {
                                        $('#AddCollege').modal({
                                            show: true,
                                            backdrop: 'static',
                                            keyboard: false
                                        })
                                    });
                                     </script>
                            }
                            else if (Model.tutor_info.type == "EditC" || Model.tutor_info.type == "EditCC")
                            {
                                <script type="text/javascript">
                                    document.onload = $(document).ready(function () {
                                        $('#College').modal({
                                            show: true,
                                            backdrop: 'static',
                                            keyboard: false
                                        })
                                    });
                                     </script>
                            }
                        }
                        </div>
                    </div>
                    <div class="uni">
                        <label>School</label>
                        <div class="clg">
                        <a href=""  data-toggle="modal" data-target="#AddSchool" >Add a School</a>

                        </div>
                        <div class="sub1">
                            @{
                                if (Model.tutor_info.type != "5" && Model.tutor_info.type != "55")
                                {
                                    if (Model.tutor_info.SchoolId == Guid.Empty)
                                    {
                                        if ((Int32)ViewData["Countabc"] == 0)
                                        { }
                                        else
                                        {
                                            for (h2 = 0; h2 < (Int32)ViewData["countS"]; h2++)
                                            {
                                                    <a href="@Url.Action("Hello5", "Tutor", new { abc = Model.objStu[h2].tutor_info.School_Id })">                                     
                                                      <button type="submit" class="bttnn primary">Edit</button>
                                                    </a>
                                                     <label> @Model.objStu[h2].tutor_info.School               (@Model.objStu[h2].tutor_info.SchoolStartDay/@Model.objStu[h2].tutor_info.SchoolStartMonth/@Model.objStu[h2].tutor_info.SchoolStartYear) to (@Model.objStu[h2].tutor_info.SchoolEndDay/@Model.objStu[h2].tutor_info.SchoolEndMonth/@Model.objStu[h2].tutor_info.SchoolEndYear)  </label>
                                
                                            }
                                        }
                                    }
                                    else
                                    {
                                    <script type="text/javascript">
                                        document.onload = $(document).ready(function () {
                                            $('#School').modal({
                                                show: true,
                                                backdrop: 'static',
                                                keyboard: false
                                            })
                                        });
                                     </script>

                                    }

                                }
                                else if (Model.tutor_info.type == "5" || Model.tutor_info.type == "55")
                                {
                                    <script type="text/javascript">
                                        document.onload = $(document).ready(function () {
                                            $('#AddSchool').modal({
                                                show: true,
                                                backdrop: 'static',
                                                keyboard: false
                                            })
                                        });
                                         </script>
                                }
                                else if (Model.tutor_info.type == "Edit5" || Model.tutor_info.type == "Edit55")
                                {
                                <script type="text/javascript">
                                    document.onload = $(document).ready(function () {
                                        $('#School').modal({
                                            show: true,
                                            backdrop: 'static',
                                            keyboard: false
                                        })
                                    });
                                     </script>
                                }
                              } 
                         
                        </div>
                    </div>
                 </div>
            </div>
        </div>
    </div>

    @* //****************************************************************@
    @* //*********************Mark Down Editor***************************@
    @* //****************************************************************@
    
    <div class="modal fade" id="OverView">
		<div class="modal-dialog modal-lg">
			 <div class="modal-content">
				<div class="modal-header">
            @{
                if (Model.tutor_info.type != "E" || Model.tutor_info.type == null)
                {
                   <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                }
                else if (Model.tutor_info.type == "E")
                {
                  <a href ="@Url.Action("TutorProfile", "Tutor")">
                    <button type="button" class="close"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                </a>
                }
               
           }				    <h3 class="modal-title" style="color:#32bd32 ">OverView</h3>
			    </div>
				<div class="modal-body">
                     @{
                         if (Model.tutor_info.type == "E")
                         {
                            <label class="error message">All fields are required</label>
                         }
                     }
                    @{
                        if (Model.objStu.Count == 0) { }
                        else
                        {
                             using (Html.BeginForm("EditorOverView", "Tutor", new { Id = Model.objStu[0].tutor_info.OverView_Id }, FormMethod.Post))
                             {
                                 @Html.AntiForgeryToken(){
                                 @Html.ValidationSummary(true){
                                  <textarea class="ckeditor" name="tutor_info.Overview" id="editor1" rows="10"></textarea>

                                <input class="bt" ID="btnUp" type="submit" value="Save Changes"/> 
                    
                              
                                                         
               
                                   

                                                              }
                                                         }
                             }   
                        }      
                    }
				</div>
                
			  </div>
		</div>
     </div>

    @* //****************************************************************@
    @* //***********************CHECKBOXLIST*****************************@
    @* //****************************************************************@

    <div class="modal fade" id="Subject">
		<div class="modal-dialog modal-lg">
			 <div class="modal-content">
				<div class="modal-header">
 @{
     if (Model.tutor_info.type != "S" || Model.tutor_info.type == null)
     {
                   <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
     }
     else if (Model.tutor_info.type != "S")
     {
                  <a href ="@Url.Action("TutorProfile", "Tutor")">
                  <button type="button" class="close" ><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                </a>
     }
               
           }				    <h3 class="modal-title"> Choose Subject</h3>
			    </div>
				<div class="mody">
                    @{
                        if (Model.tutor_info.type == "S")
                        {
                            <label class="error message">All fields are required</label>
                        }
                     }
                    <div class="col-md-12">
                   @{
                       if (Model.objStu.Count == 0) { }
                        else
                        {
                            using (Html.BeginForm("EditSubject", "Tutor", new { Id = Model.objStu[0].tutor_info.Subject_Id }, FormMethod.Post))
                            {

                                for (var i = 0; i < 6; i++)
                                {  
                       
                                     <div class="col-md-2">
                                        @Html.CheckBoxFor(model => model.tutor_subject[i].Checked, new { @class = "Checkbox" })  
                                        @Html.DisplayFor(model => model.tutor_subject[i].Subject_Name)  
                                     </div>
                            
                                } 
                               <input class="subjec bttPrim" id="Submit1" type="submit" value="Save Changes" /> 
                       
                            }  
                            }
                      }
                       </div> 
				</div>
			 </div>
		</div>
     </div>

    @* //****************************************************************@
    @* //***************************EDUCATION****************************@
    @* //****************************************************************@
    
    @* //****************************************************************@
    @* //************************EDIT EDUCATION***************************@
    @* //****************************************************************@
 <div class="modal fade" id="School" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
     <div class="modal-content">
        <div class="modal-header">
            @{
                if (Model.tutor_info.SchoolId == Guid.Empty)
                {
                   <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                }
                else
                {
                  <a href ="@Url.Action("TutorProfile", "Tutor", new { Id = Guid.Empty })">
                  <button type="button" class="close" ><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                </a>
                }
               
           }

        
          <h4 class="modal-title" id="myModalLabel">Edit School</h4>
        </div>
        <div class="modaody">
            @{
                if (Model.tutor_info.type == "5Edit" || Model.tutor_info.type == "55Edit")
                {
                <label class="error message">All fields are required</label>
                }
             }
             @using (Html.BeginForm("School", "Tutor", new { School_Id = Model.tutor_info.SchoolId }, FormMethod.Post))
             {
                      
                      @Html.AntiForgeryToken(){
                      @Html.ValidationSummary(true){
                      @Html.Label("School")
                      @Html.DisplayFor(model => model.tutor_info.SchoolId)
                      <div>                                
                           @{ 
                                                       if (Model.tutor_info.type == "5Edit" || Model.tutor_info.type != "55Edit" || Model.tutor_info.type == null)
                                                       {
                                    @Html.EditorFor(model => model.tutor_info.School)
                                                       }
                                                       else if (Model.tutor_info.type == "55Edit")
                                                       {
                                   <input id="mytext" class="form-control" type="text" name="tutor_info.School" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Field isn't empty" placeholder="School Name" />
                                                       }
                               <script>
                                   $('#mytext').popover();
                               </script>
                            }
                      </div>                            
                 <br>
                  
                   @Html.Label("Start")
                 
                       @Html.DropDownList("tutor_info.SchoolStartYear", Enumerable.Range(1990, 200).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Year --", new { @class = "styleSchoolStartYear" })    
                       
                           @Html.DropDownList("tutor_info.SchoolStartMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleSchoolStartMonth" })
                       
                       @Html.DropDownList("tutor_info.SchoolStartDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleSchoolStartDay" })  
                 <br>  
                   @Html.Label("To")
                 
                     
                     @Html.DropDownList("tutor_info.SchoolEndYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                {
                    Value = i.ToString(),
                    Text = i.ToString()
                }), "-- Year --", new { @class = "styleSchoolEndYear" })    
                       
                           @Html.DropDownList("tutor_info.SchoolEndMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleSchoolEndMonth" })
                       
                       @Html.DropDownList("tutor_info.SchoolEndDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleSchoolEndDay" }) 
                     
                     
                      <input class="btt bttPrim" ID="btnUp" type="submit" value="Save Changes"/>  
                                                   }
                                              }
             }
        </div>
     </div>
    </div>
  </div>
<div class="modal fade" id="College" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
         @{
             if (Model.tutor_info.ClgId == Guid.Empty)
             {
                     <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
             }
             else
             {
                  <a href ="@Url.Action("TutorProfile", "Tutor", new { Id = Guid.Empty })">
                    <button type="button" class="close" ><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                  </a>
             }
               
           } 
        <h4 class="modal-title" id="myModalLabel">Edit College</h4>
      </div>
      <div class="modaody">
             @{
                 
                 if (Model.tutor_info.type == "CEdit" || Model.tutor_info.type == "CCEdit")
                 {
                    <label class="error message">All fields are required</label>
                 }
                  
             }
             @using (Html.BeginForm("College", "Tutor", new { Clg_Id = Model.tutor_info.ClgId }, FormMethod.Post))
             {
                      @Html.AntiForgeryToken()    {
                      @Html.ValidationSummary(true){

                                                       //////////////////////////////////////////////////////////
                                                       ///////////////////////College Date///////////////////////
                                                       //////////////////////////////////////////////////////////
                      <div> 
                      @Html.Label("College")
                      </div>
                      <div>
                      @{ 
                                                       if (Model.tutor_info.type == null || Model.tutor_info.type != "CCEdit" || Model.tutor_info.type == "CEdit")
                                                       {
                                    @Html.EditorFor(model => model.tutor_info.College)
                                                       }
                                                       else if (Model.tutor_info.type == "CCEdit")
                                                       {
                                   <input id="mytex" class="form-control" type="text" name="tutor_info.College" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Field isn't empty" placeholder="College Name" />
                                                       }
                               <script>
                                   $('#mytex').popover();
                               </script>
                        }

                      </div>
                      @Html.Label("Start")
                      @Html.DropDownList("tutor_info.CollegeStartYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                 {
                     Value = i.ToString(),
                     Text = i.ToString()
                 }), "-- Year --", new { @class = "styleCollegeStartYear" })    
                       
                           @Html.DropDownList("tutor_info.CollegeStartMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleCollegeStartMonth" })
                       
                       @Html.DropDownList("tutor_info.CollegeStartDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleCollegeStartDay" })  
                      <br>
                      @Html.Label("To")
                     @Html.DropDownList("tutor_info.CollegeEndYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                {
                    Value = i.ToString(),
                    Text = i.ToString()
                }), "-- Year --", new { @class = "styleCollegeEndYear" })    
                       
                           @Html.DropDownList("tutor_info.CollegeEndMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleCollegeEndMonth" })
                       
                       @Html.DropDownList("tutor_info.CollegeEndDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleCollegeEndDay" }) 
                     
                       
                      <input class="btt bttPrim" ID="btnUp" type="submit" value="Save Changes"/>  
                                                   }
                                                  }
             }
      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="Uni" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
          @{
              if (Model.tutor_info.UniId == Guid.Empty)
              {
                <button type="button" class="close" data-dismiss="modal" ><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
              }
              else
              {
                  <a href="@Url.Action("TutorProfile", "Tutor", new { Id = Guid.Empty })">
                    <button type="button" class="close" ><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                   </a> 
              }
               
           }
       <h4 class="modal-title" id="myModalLabel">Edit University</h4>
      </div>
      <div class="modaody">
          @{
                 
              if (Model.tutor_info.type == "UEdit" || Model.tutor_info.type == "UUEdit")
              {
                    <label class="error message">All fields are required</label>
              }
                  
             }
             @using (Html.BeginForm("Uni", "Tutor", new { Uni_Id = Model.tutor_info.UniId }, FormMethod.Post))
             {

                      @Html.AntiForgeryToken()    {
                      @Html.ValidationSummary(true){
                      <div>
                     @Html.Label("University")
                     </div>
                    <div>
                      @{ 
                                                       if (Model.tutor_info.type == "UEdit" || Model.tutor_info.type != "UUEdit" || Model.tutor_info.type == null)
                                                       {
                                    @Html.EditorFor(model => model.tutor_info.Uni)
                                                       }
                                                       else if (Model.tutor_info.type == "UUEdit")
                                                       {
                                   <input id="mytex1" class="form-control" type="text" name="tutor_info.Uni" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Field isn't empty" placeholder="University Name" />
                                                       }
                               <script>
                                   $('#mytex1').popover();
                               </script>
                        }
                    </div>
                     
                    <div>
                     @Html.DropDownList("tutor_info.Degree", new List<SelectListItem> {
                        new SelectListItem {Text="BS in ComputerScience",Value="BS in ComputerScience"},
                        new SelectListItem {Text="Engineering",Value="Engineering"},
                        new SelectListItem {Text="MBA",Value="MBA"},
                        new SelectListItem {Text="MBBS",Value="MBBS"},
                        new SelectListItem {Text="BS in Math",Value="BS in Math"},
                        new SelectListItem {Text="Software Engineering",Value="Software Engineering"},
                        new SelectListItem {Text="MSc in ComputerScience",Value="MSc in ComputerScience"},
                        new SelectListItem {Text="MIT",Value="MIT"},
                        new SelectListItem {Text="BS in English",Value="BS in English"},
                        new SelectListItem {Text="BS in Chemistry",Value="Bs in Chemistry"},
                        new SelectListItem {Text="BS in Physics",Value="Bs in Physics"},
                        new SelectListItem {Text="MPhil",Value="MPhil"},
                        new SelectListItem {Text="Phd",Value="Phd"},
                    }, "--Degree--", new { @class = "style" })
                    </div>
                   @Html.Label("Start")
            
                      @Html.DropDownList("tutor_info.UniStartYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                 {
                     Value = i.ToString(),
                     Text = i.ToString()
                 }), "-- Year --", new { @class = "styleUniStartYear" })    
                       
                           @Html.DropDownList("tutor_info.UniStartMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleUniStartMonth" })
                       
                       @Html.DropDownList("tutor_info.UniStartDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleUniStartDay" })  
                      
                     <br>
                      @Html.Label("To")
                     @Html.DropDownList("tutor_info.UniEndYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                {
                    Value = i.ToString(),
                    Text = i.ToString()
                }), "-- Year --", new { @class = "styleUniEndYear" })    
                       
                           @Html.DropDownList("tutor_info.UniEndMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleUniEndMonth" })
                       
                       @Html.DropDownList("tutor_info.UniEndDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleUniEndDay" })

                      <input class="btt bttprim" ID="btnUp" type="submit" value="Save Changes"/>  
                                                   }
                                                  }
             }
      </div>
    </div>
  </div>
</div>

      <script  type="text/javascript">
          function EditSchool() {
              $('#School').modal({ show: true, backdrop: 'static', keyboard: false })
          }
          function EditCollege() {
              $('#College').modal({ show: true, backdrop: 'static', keyboard: false })
          }
          function EditUni() {
              $('#Uni').modal({ show: true, backdrop: 'static', keyboard: false })
          }
          function AddSchool() {
              $('#AddSchool').modal({ show: true, backdrop: 'static', keyboard: false })
          }
          function AddCollege() {
              $('#AddCollege').modal({ show: true, backdrop: 'static', keyboard: false })
          }
          function AddUni() {
              $('#AddUni').modal({ show: true, backdrop: 'static', keyboard: false })
          }
          function AddOverView() {
              $('#OverView').modal({ show: true, backdrop: 'static', keyboard: false })
          }
          function AddSubject() {
              $('#Subject').modal({ show: true, backdrop: 'static', keyboard: false })
          }
      </script>
    @* //****************************************************************@
    @* //************************ADD EDUCATION***************************@
    @* //****************************************************************@

    <div class="modal fade" id="AddSchool" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
     <div class="modal-content">
        <div class="modal-header">
 @{
                
     if (Model.tutor_info.type == "5" || Model.tutor_info.type == "55")
     {
           <a href ="@Url.Action("TutorProfile", "Tutor")">
                  <button type="button" class="close" ><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                </a>  
     }
     else if (Model.tutor_info.type != "5" || Model.tutor_info.type != "55" || Model.tutor_info.type == null)
     {
          <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>

     }
               
           }          <h4 class="modal-title" id="myModalLabel">Add School</h4>
        </div>
        <div class="modaody">
             @{
                 if (Model.tutor_info.type == "5" || Model.tutor_info.type == "55")
                 {
                <label class="error message">All fields are required</label>
                 }
             }
             @using (Html.BeginForm("AddSchool", "Tutor", FormMethod.Post))
             {
                 
                      @Html.AntiForgeryToken()    {
                      @Html.ValidationSummary(true){
                      @Html.Label("School")
                      <div>                                
                          @{ 
                                                       if (Model.tutor_info.type == "5" || Model.tutor_info.type != "55" || Model.tutor_info.type == null)
                                                       {
                                    @Html.EditorFor(model => model.tutor_info.School)
                                                       }
                                                       else if (Model.tutor_info.type == "55")
                                                       {
                                   <input id="mytext" class="form-control" type="text" name="tutor_info.School" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Field isn't empty" placeholder="School Name" />
                                                       }
                               <script>
                                   $('#mytext').popover();
                               </script>
                            }
                      </div>                            
                 <br>
                   @Html.Label("Start")
                 
                       @Html.DropDownList("tutor_info.SchoolStartYear", Enumerable.Range(1990, 200).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Year --", new { @class = "styleSchoolStartYear" })    
                       
                           @Html.DropDownList("tutor_info.SchoolStartMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleSchoolStartMonth" })
                       
                       @Html.DropDownList("tutor_info.SchoolStartDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleSchoolStartDay" })  
                 <br>  
                   @Html.Label("To")
                 
                     
                     @Html.DropDownList("tutor_info.SchoolEndYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                {
                    Value = i.ToString(),
                    Text = i.ToString()
                }), "-- Year --", new { @class = "styleSchoolEndYear" })    
                       
                           @Html.DropDownList("tutor_info.SchoolEndMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleSchoolEndMonth" })
                       
                       @Html.DropDownList("tutor_info.SchoolEndDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleSchoolEndDay" }) 
                     
                     
                      <input class="btt bttPrim" ID="btnUp" type="submit" value="Save"/>  
                                                   }
                                                  }
             }
        </div>
     </div>
    </div>
    </div>
    <div class="modal fade" id="AddCollege" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
          @{
              if (Model.tutor_info.type == "C" || Model.tutor_info.type == "CC")
              {
                  <a href ="@Url.Action("TutorProfile", "Tutor")">
                     <button type="button" class="close" ><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                  </a>
              }
              else if (Model.tutor_info.type != "C" || Model.tutor_info.type != "CC" || Model.tutor_info.type == null)
              {
                  <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>

              }
               
           }         <h4 class="modal-title" id="myModalLabel">Add College</h4>
      </div>
      <div class="modaody">
           @{
                 
               if (Model.tutor_info.type == "C")
               {
                    <label class="error message">All fields are required</label>
               }
                  
             }
             @using (Html.BeginForm("AddCollege", "Tutor", FormMethod.Post))
             {

                      @Html.AntiForgeryToken()    {
                      @Html.ValidationSummary(true){
                                                       //////////////////////////////////////////////////////////
                                                       ///////////////////////College Date///////////////////////
                                                       //////////////////////////////////////////////////////////
                      <div> 
                      @Html.Label("College")
                      </div>
                      <div>
                       @{ 
                                                       if (Model.tutor_info.type == "C" || Model.tutor_info.type != "CC" || Model.tutor_info.type == null)
                                                       {
                                    @Html.EditorFor(model => model.tutor_info.College)
                                                       }
                                                       else if (Model.tutor_info.type == "CC")
                                                       {
                                   <input id="mytex" class="form-control" type="text" name="tutor_info.College" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Field isn't empty" placeholder="College Name" />
                                                       }
                               <script>
                                   $('#mytex').popover();
                               </script>
                        }


                      </div>
                      @Html.Label("Start")
                      @Html.DropDownList("tutor_info.CollegeStartYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                 {
                     Value = i.ToString(),
                     Text = i.ToString()
                 }), "-- Year --", new { @class = "styleCollegeStartYear" })    
                       
                           @Html.DropDownList("tutor_info.CollegeStartMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleCollegeStartMonth" })
                       
                       @Html.DropDownList("tutor_info.CollegeStartDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleCollegeStartDay" })  
                      <br>
                      @Html.Label("To")
                     @Html.DropDownList("tutor_info.CollegeEndYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                {
                    Value = i.ToString(),
                    Text = i.ToString()
                }), "-- Year --", new { @class = "styleCollegeEndYear" })    
                       
                           @Html.DropDownList("tutor_info.CollegeEndMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleCollegeEndMonth" })
                       
                       @Html.DropDownList("tutor_info.CollegeEndDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleCollegeEndDay" }) 
                     
                       
                      <input class="btt bttPrim" ID="btnUp" type="submit" value="Save"/>  
                                                   }
                                                  }
             }
      </div>
      
    </div>
  </div>
</div>
    <div class="modal fade" id="AddUni" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
          @{
              if (Model.tutor_info.type == "U" || Model.tutor_info.type == "UU")
              {
                  <a href ="@Url.Action("TutorProfile", "Tutor")">
                  <button type="button" class="close" ><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                </a>
              }
              else if (Model.tutor_info.type != "U" || Model.tutor_info.type != "UU" || Model.tutor_info.type == null)
              {
                   <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>    
              }
               
           }         <h4 class="modal-title" id="myModalLabel">Add University</h4>
      </div>
      <div class="modaody">
          @{
                 
              if (Model.tutor_info.type == "U")
              {
                    <label class="error message">All fields are required</label>
              }
                  
           }
             @using (Html.BeginForm("AddUni", "Tutor", FormMethod.Post))
             {
                      @Html.AntiForgeryToken()    {
                      @Html.ValidationSummary(true){
                      <div>
                     @Html.Label("University")
                     </div>
                    <div>
                      @{ 
                                                       if (Model.tutor_info.type == "U" || Model.tutor_info.type != "UU" || Model.tutor_info.type == null)
                                                       {
                                    @Html.EditorFor(model => model.tutor_info.Uni)
                                                       }
                                                       else if (Model.tutor_info.type == "UU")
                                                       {
                                   <input id="mytex1" class="form-control" type="text" name="tutor_info.Uni" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Field isn't empty" placeholder="University Name"/>
                                                       }
                               <script>
                                   $('#mytex1').popover();
                               </script>
                        }
                    </div>
                     
                    <div>
                     @Html.DropDownList("tutor_info.Degree", new List<SelectListItem> {
                        new SelectListItem {Text="BS in ComputerScience",Value="BS in ComputerScience"},
                        new SelectListItem {Text="Engineering",Value="Engineering"},
                        new SelectListItem {Text="MBA",Value="MBA"},
                        new SelectListItem {Text="MBBS",Value="MBBS"},
                        new SelectListItem {Text="BS in Math",Value="BS in Math"},
                        new SelectListItem {Text="Software Engineering",Value="Software Engineering"},
                        new SelectListItem {Text="MSc in ComputerScience",Value="MSc in ComputerScience"},
                        new SelectListItem {Text="MIT",Value="MIT"},
                        new SelectListItem {Text="BS in English",Value="BS in English"},
                        new SelectListItem {Text="BS in Chemistry",Value="Bs in Chemistry"},
                        new SelectListItem {Text="BS in Physics",Value="Bs in Physics"},
                        new SelectListItem {Text="MPhil",Value="MPhil"},
                        new SelectListItem {Text="Phd",Value="Phd"},
                    }, "--Degree--", new { @class = "style" })
                    </div>
                   @Html.Label("Start")
            
                      @Html.DropDownList("tutor_info.UniStartYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                 {
                     Value = i.ToString(),
                     Text = i.ToString()
                 }), "-- Year --", new { @class = "styleUniStartYear" })    
                       
                           @Html.DropDownList("tutor_info.UniStartMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleUniStartMonth" })
                       
                       @Html.DropDownList("tutor_info.UniStartDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleUniStartDay" })  
                      
                     <br>
                      @Html.Label("To")
                     @Html.DropDownList("tutor_info.UniEndYear", Enumerable.Range(1990, 115).Select(i => new SelectListItem
                {
                    Value = i.ToString(),
                    Text = i.ToString()
                }), "-- Year --", new { @class = "styleUniEndYear" })    
                       
                           @Html.DropDownList("tutor_info.UniEndMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem
                      {
                          Value = i.ToString(),
                          Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)
                      }),
                      "-- Month --", new { @class = "styleUniEndMonth" })
                       
                       @Html.DropDownList("tutor_info.UniEndDay", Enumerable.Range(1, 31).Select(i => new SelectListItem
                  {
                      Value = i.ToString(),
                      Text = i.ToString()
                  }), "-- Day --", new { @class = "styleUniEndDay" })

                      <input class="btt bttprim" ID="btnUp" type="submit" value="Save"/>  
                                                   }
                                                  }
             }
      </div>
      
    </div>
  </div>
</div>
  }
}

@section img1
{
    <style>
        .Name{
    font-size: 1.5em;
    font-weight: 600;
    color: #32bd32;
    margin-left: 8%;
    border-bottom: 1px solid #32bd32;
    width: 41%;
}

    </style>
        @{
            if (Model.tutor_info.type != "Imag")
            {
                            
                if ((Int32)ViewData["Imagecount"] == 0)
                {
                    <div class=" col-xs-10 image"> 
                    <img  src="~/images/no-user-image-square.png"  alt=""/>
                    </div>
                    <button type="button" class="btnn111 primary" data-toggle="modal" data-target="#im">Edit</button>
                }
                else
                {
                    TutorImage stu_Image = new TutorImage();
                    stu_Image = (TutorImage)ViewData["ImageProfile"];
                    <div class=" col-xs-10 image"> 
                        <img src="data:image/png;base64,@Convert.ToBase64String(stu_Image.Image_Data, 0, stu_Image.Image_Data.Length)"  />  
                    </div>
                    <button type="button" class="btnn111 primary" data-toggle="modal" data-target="#im">Edit</button>
                }
            }
            else
            {
                if ((Int32)ViewData["Imagecount"] == 0)
                {
                    <div class=" col-xs-10 image"> 
                        <img  src="~/images/no-user-image-square.png" alt=""/>
                    </div>
                    <button type="button" class="btnn111 primary" data-toggle="modal" data-target="#im">Edit</button>
                    <script type="text/javascript">
                        document.onload = $(document).ready(function () {
                         $('#im').modal({
                             show: true,
                             backdrop: 'static',
                             keyboard: false
                         })
                     });
                </script>
                }
                else
                {
                    TutorImage stu_Image = new TutorImage();
                    stu_Image = (TutorImage)ViewData["ImageProfile"];
                    <div class=" col-xs-10 image"> 
                        <img src="data:image/png;base64,@Convert.ToBase64String(stu_Image.Image_Data, 0, stu_Image.Image_Data.Length)"  />  
                    </div>
                    <button type="button" class="btnn111 primary" data-toggle="modal" data-target="#im">Edit</button>
                    <script type="text/javascript">
                         document.onload = $(document).ready(function () {
                             $('#im').modal({
                                 show: true,
                                 backdrop: 'static',
                                 keyboard: false
                             })
                         });
                     </script>
                }
            }
    }  
    <script>
        function AddImage() {
            $("#im").modal({
                backdrop: false,
                show: true,
                keyboard:false
            })
        }
    </script>
}
@section Image
{
    <div class="modal fade" id="im">
		 <div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
                    @{
                        if (Model.tutor_info.type == "Imag")
                        {
                            <a href="@Url.Action("TutorProfile", "Tutor")">
                   <button type="button" class="close"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                            </a>
                        }
                        else
                        {
                   <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>

                        }
                     }
					<h3 class="modal-title">Upload Picture</h3>
				</div>
			    <div class="modaly">
                 <label>Upload Your Picture Add a picture to bring a personal touch to your Profile.</label>
                 @{  
                     if (Model.tutor_info.type == "Imag")
                     {
                        <label class="error message">Upload Image </label>
                     }
                  }
				@using (Html.BeginForm("Image", "Tutor", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                      <input type="file" accept="image/*" name="ImageUpload" id="ImageUpload" onchange="ShowPreview(this)" />  
                      <img Id="impPrev" style="height:200px; width:200px;" />  
                      <input class="Imbt" Id="btnUp" type="submit" value="Save It"/>  
                }
              </div>
		    </div>
	     </div>
	</div>   
      <script type="text/javascript">
          function ShowPreview(input) {
              if (input.files && input.files[0]) {
                  var ImageDir = new FileReader();
                  ImageDir.onload = function (e) {
                      $('#impPrev').attr('src', e.target.result);
                  }
                  ImageDir.readAsDataURL(input.files[0]);
              }
          }
    </script>
}

